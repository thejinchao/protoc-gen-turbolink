<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Google.Protobuf.Reflection" #>
<#@ import namespace="System.Globalization" #>
//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "TurboLinkGrpcMessage.h"
<#
foreach (string dependency in s.DependencyFiles)
{
#>
#include "<#=dependency#>Message.h"
<#}#>
<#if(s.EnumArray.Count>0 || s.MessageArray.Count>0) {#>
<#if(s.NeedBlueprintFunctionLibrary()) {#>
#include "Kismet/BlueprintFunctionLibrary.h"
<#}#>
#include "<#=s.CamelFileName#>Message.generated.h"
<#}#>
<#
foreach (GrpcEnum enumDefine in s.EnumArray)
{
#>

UENUM(BlueprintType, meta = (DisplayName="<#=enumDefine.DisplayName#>", ScriptName="<#=enumDefine.Name#>"))
enum class <#=enumDefine.Name#> : uint8
{
<#if(enumDefine.MissingZeroField) {#>
    _ZERO_RESERVED_FIELD_=0 UMETA(Hidden),
<#}#>
<#
foreach (GrpcEnumField enumField in enumDefine.Fields)
{
#>
    <#=enumField.Name#>=<#=enumField.Number#>,
<#}#>
};
<#}#>
<# 
foreach(GrpcMessage message in s.MessageArray)
{
if(message.HasNativeMake || message is GrpcMessage_Oneof)
{
#>

USTRUCT(BlueprintType, meta = (DisplayName="<#=message.DisplayName#>",
    HasNativeMake = "/Script/TurboLinkGrpc.<#=message.Name.Substring(1)#>HelperLibrary.Make<#=message.CamelName#>",
    HasNativeBreak = "/Script/TurboLinkGrpc.<#=message.Name.Substring(1)#>HelperLibrary.Break<#=message.CamelName#>"))
<#} else {#>

USTRUCT(BlueprintType, meta = (DisplayName="<#=message.DisplayName#>"))
<#}#>
struct <#=message.Name#> : public FGrpcMessage
{
    GENERATED_BODY()
<#
if(g.GenerateJsonCode && !(message is GrpcMessage_Oneof)) {
#>
    DECLARE_JSON_FUNCTIONS()
<#}#>
<#
if(message is GrpcMessage_Oneof) {
GrpcMessage_Oneof oneofMessage = (GrpcMessage_Oneof)message;
#>

    UPROPERTY(BlueprintReadWrite, Category = TurboLink)
    <#=oneofMessage.OneofEnum.Name#> <#=oneofMessage.CamelName#>Case{};
<#}#>
<#
foreach(GrpcMessageField field in message.Fields)
{
if(field.NeedNativeMake)
{
#>

    <#=field.TypeAsNativeField#> <#=field.FieldName#>;
<#}else{#>

    UPROPERTY(BlueprintReadWrite, Category = TurboLink)
    <#=field.FieldType#> <#=field.FieldName#><#=field.FieldDefaultValue#>;
<#}}#>
};
<#}#>
<# 
foreach(GrpcMessage message in s.MessageArray)
{
if(message.HasNativeMake || message is GrpcMessage_Oneof)
{
#>

UCLASS()
class U<#=message.Name.Substring(1)#>HelperLibrary : public UBlueprintFunctionLibrary
{
    GENERATED_BODY()
public:
    UFUNCTION(BlueprintPure, Category = "TurboLink|<#=s.CamelPackageName#>", meta=(BlueprintThreadSafe))
    static <#=message.Name#> Make<#=message.CamelName#>(<#if(message is GrpcMessage_Oneof){ GrpcMessage_Oneof oneofMessage = (GrpcMessage_Oneof)message; #><#=oneofMessage.OneofEnum.Name#> <#=oneofMessage.CamelName#>Case, 
<#}else{#> 
<#}#>        <#
for(int index=0; index<message.Fields.Count; index++){
GrpcMessageField field = message.Fields[index];
#><#=field.FieldType#> <#=field.FieldName#><#
if(index==(message.Fields.Count-1)){#> 
    <#}else if((index+1)%3==0){#>, 
        <#}else{#>, <#}}#>
);

    UFUNCTION(BlueprintPure, Category = "TurboLink|<#=s.CamelPackageName#>", meta=(BlueprintThreadSafe))
    static void Break<#=message.CamelName#>(const <#=message.Name#>& <#=message.CamelName#>, <#if(message is GrpcMessage_Oneof){ GrpcMessage_Oneof oneofMessage = (GrpcMessage_Oneof)message; #><#=oneofMessage.OneofEnum.Name#>& <#=oneofMessage.CamelName#>Case, 
<#}else{#> 
<#}#>        <#
for(int index=0; index<message.Fields.Count; index++){
GrpcMessageField field = message.Fields[index];
#><#=field.FieldType#>& <#=field.FieldName#><#
if(index==(message.Fields.Count-1)){#> 
    <#}else if((index+1)%3==0){#>, 
        <#}else{#>, <#}}#>
);
};
<#}}#>
